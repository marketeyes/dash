.scroller__wrapper {
    /* How Fast one slide is visible on screen (from entering screen to leaving it) */
    --scrolling-gallery-item-duration: 10s;
    /* How many items we want to see on screen at once */
    --scrolling-gallery-items-visible: 7;
    /* How many items are to scroll */
    --scrolling-gallery-items-total: 7;
    margin-top: .01em;
    overflow: hidden;
    will-change: transform;
    /* bakcground Color */
    background-color: black; 
    overflow-x: hidden;
  }
  
  .scroller {
    /* This forces the scroller to be as wide as all items together */
    animation-duration: calc(var(--scrolling-gallery-item-duration, 1s) / var(--scrolling-gallery-items-visible) * var(--scrolling-gallery-items-total));
    animation-timing-function: linear;
    animation-name: scrolling-gallery;
    animation-iteration-count: infinite;
    display: flex;
    white-space: nowrap;
    flex: 1;
    padding: 0rem;
    background: rgba(0, 0, 0, 0.1);
    border-radius: 0rem;
    }
  
  .scroller__container {
    /* Without this, scroll will jump on desktop if any vertical scrollbar is shown */
    width: 100vw;
    display: flex;
    padding: 0%;
    
  }
  
  .scroller__item {
    flex: 1 0 calc(100% / var(--scrolling-gallery-items-visible));
    /* Without this, block elements will take width from their contents and thus making wrong calculations,
       so this just force elements to take only exact part of the container (screen) and equal for all */
    width: 10vmax;
    /* If you want to have it continuous without any spaces, remove two lines below */
    box-sizing: border-box;
    padding: 1em;
    font-size: 25px;
  }
  
  .scroller img {
    display: block;
    height: 100%;
    object-fit: cover;
    object-position: center;
    width: 100%;
  }
  
  @keyframes scrolling-gallery {
    10% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(calc(var(--scrolling-gallery-items-total) * -100vw / var(--scrolling-gallery-items-visible)));
    }
  }
  
  .scroller:hover,
  .scroller:focus {
    animation-play-state: paused;
  }